spring:
  application:
    name: service-virtualization
  profiles:
    default: mongodb # Default to MongoDB storage
  data:
    mongodb:
      uri: mongodb://localhost:27017
      database: service_virtualization
  datasource:
    url: jdbc:sybase:Tds:localhost:5000/service_virtualization
    username: sa
    password: password
    driver-class-name: com.sybase.jdbc4.jdbc.SybDriver

server:
  port: 8080
  servlet:
    context-path: /

# Wiremock configuration
wiremock:
  server:
    host: localhost
    port: 8081

# Database configuration
database:
  primary: mongodb # Options: mongodb, sybase
  # Use both or one - configuration controls which one is used

# REST API paths
rest:
  api-path: /api
  proxy-path: /proxy

# Swagger/OpenAPI
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

# Logging
logging:
  level:
    root: INFO
    com.service.virtualization: DEBUG
    org.wiremock: INFO
    org.springframework.web: INFO

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    defaults:
      enabled: true

# External Service Connection Properties (for health checks)
# Kafka
kafka:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
  connection-timeout: ${KAFKA_CONNECTION_TIMEOUT:2000}

# IBM MQ
ibmmq:
  host: ${IBMMQ_HOST:localhost}
  port: ${IBMMQ_PORT:1414}
  connection-timeout: ${IBMMQ_CONNECTION_TIMEOUT:2000}

# Tibco EMS
tibco:
  server: ${TIBCO_SERVER:localhost}
  port: ${TIBCO_PORT:7222}
  connection-timeout: ${TIBCO_CONNECTION_TIMEOUT:2000}

# ActiveMQ
activemq:
  broker-url: ${ACTIVEMQ_BROKER_URL:tcp://localhost:61616}
  username: ${ACTIVEMQ_USERNAME:admin}
  password: ${ACTIVEMQ_PASSWORD:admin}
  port: ${ACTIVEMQ_PORT:61616}
  connection-timeout: ${ACTIVEMQ_CONNECTION_TIMEOUT:2000}

# File Service Configuration
virtualization:
  files:
    output.directory: ${FILES_OUTPUT_DIR:./file-output}
    scheduler:
      enabled: ${FILES_SCHEDULER_ENABLED:true}
      poll-rate: ${FILES_SCHEDULER_POLL_RATE:60000}

# Schema Registry Configuration
schema:
  registry:
    url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}
    auth:
      # Auth types: none, basic, apikey, bearer
      # Use 'none' for non-RBAC Schema Registries (local/development)
      # Use 'basic' for username/password authentication
      # Use 'apikey' or 'bearer' for token-based authentication
      type: ${SCHEMA_REGISTRY_AUTH_TYPE:none}
      username: ${SCHEMA_REGISTRY_USERNAME:}
      password: ${SCHEMA_REGISTRY_PASSWORD:}
      api-key: ${SCHEMA_REGISTRY_API_KEY:}
